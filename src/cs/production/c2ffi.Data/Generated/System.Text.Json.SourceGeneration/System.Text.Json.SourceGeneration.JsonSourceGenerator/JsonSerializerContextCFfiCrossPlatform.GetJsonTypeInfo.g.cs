// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace c2ffi.Data.Serialization
{
    public partial class JsonSerializerContextCFfiCrossPlatform : global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver
    {
        /// <inheritdoc/>
        public override global::System.Text.Json.Serialization.Metadata.JsonTypeInfo? GetTypeInfo(global::System.Type type)
        {
            Options.TryGetTypeInfo(type, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo? typeInfo);
            return typeInfo;
        }

        global::System.Text.Json.Serialization.Metadata.JsonTypeInfo? global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(global::System.Type type, global::System.Text.Json.JsonSerializerOptions options)
        {
            if (type == typeof(bool))
            {
                return Create_Boolean(options);
            }
            if (type == typeof(bool?))
            {
                return Create_NullableBoolean(options);
            }
            if (type == typeof(global::c2ffi.Data.CFfiCrossPlatform))
            {
                return Create_CFfiCrossPlatform(options);
            }
            if (type == typeof(global::c2ffi.Data.CFunctionCallingConvention))
            {
                return Create_CFunctionCallingConvention(options);
            }
            if (type == typeof(global::c2ffi.Data.CLocation))
            {
                return Create_CLocation(options);
            }
            if (type == typeof(global::c2ffi.Data.CLocation?))
            {
                return Create_NullableCLocation(options);
            }
            if (type == typeof(global::c2ffi.Data.CNodeKind))
            {
                return Create_CNodeKind(options);
            }
            if (type == typeof(global::c2ffi.Data.CRecordKind))
            {
                return Create_CRecordKind(options);
            }
            if (type == typeof(global::c2ffi.Data.CType))
            {
                return Create_CType(options);
            }
            if (type == typeof(global::c2ffi.Data.Nodes.CEnum))
            {
                return Create_CEnum(options);
            }
            if (type == typeof(global::c2ffi.Data.Nodes.CEnumValue))
            {
                return Create_CEnumValue(options);
            }
            if (type == typeof(global::c2ffi.Data.Nodes.CFunction))
            {
                return Create_CFunction(options);
            }
            if (type == typeof(global::c2ffi.Data.Nodes.CFunctionParameter))
            {
                return Create_CFunctionParameter(options);
            }
            if (type == typeof(global::c2ffi.Data.Nodes.CFunctionPointer))
            {
                return Create_CFunctionPointer(options);
            }
            if (type == typeof(global::c2ffi.Data.Nodes.CFunctionPointerParameter))
            {
                return Create_CFunctionPointerParameter(options);
            }
            if (type == typeof(global::c2ffi.Data.Nodes.CMacroObject))
            {
                return Create_CMacroObject(options);
            }
            if (type == typeof(global::c2ffi.Data.Nodes.COpaqueType))
            {
                return Create_COpaqueType(options);
            }
            if (type == typeof(global::c2ffi.Data.Nodes.CRecord))
            {
                return Create_CRecord(options);
            }
            if (type == typeof(global::c2ffi.Data.Nodes.CRecordField))
            {
                return Create_CRecordField(options);
            }
            if (type == typeof(global::c2ffi.Data.Nodes.CTypeAlias))
            {
                return Create_CTypeAlias(options);
            }
            if (type == typeof(global::c2ffi.Data.Nodes.CVariable))
            {
                return Create_CVariable(options);
            }
            if (type == typeof(global::c2ffi.Data.TargetPlatform))
            {
                return Create_TargetPlatform(options);
            }
            if (type == typeof(global::System.Collections.Immutable.ImmutableArray<global::c2ffi.Data.Nodes.CEnumValue>))
            {
                return Create_ImmutableArrayCEnumValue(options);
            }
            if (type == typeof(global::System.Collections.Immutable.ImmutableArray<global::c2ffi.Data.Nodes.CFunctionParameter>))
            {
                return Create_ImmutableArrayCFunctionParameter(options);
            }
            if (type == typeof(global::System.Collections.Immutable.ImmutableArray<global::c2ffi.Data.Nodes.CFunctionPointerParameter>))
            {
                return Create_ImmutableArrayCFunctionPointerParameter(options);
            }
            if (type == typeof(global::System.Collections.Immutable.ImmutableArray<global::c2ffi.Data.Nodes.CRecordField>))
            {
                return Create_ImmutableArrayCRecordField(options);
            }
            if (type == typeof(global::System.Collections.Immutable.ImmutableArray<global::c2ffi.Data.TargetPlatform>))
            {
                return Create_ImmutableArrayTargetPlatform(options);
            }
            if (type == typeof(global::System.Collections.Immutable.ImmutableSortedDictionary<string, global::c2ffi.Data.Nodes.CEnum>))
            {
                return Create_ImmutableSortedDictionaryStringCEnum(options);
            }
            if (type == typeof(global::System.Collections.Immutable.ImmutableSortedDictionary<string, global::c2ffi.Data.Nodes.CFunction>))
            {
                return Create_ImmutableSortedDictionaryStringCFunction(options);
            }
            if (type == typeof(global::System.Collections.Immutable.ImmutableSortedDictionary<string, global::c2ffi.Data.Nodes.CFunctionPointer>))
            {
                return Create_ImmutableSortedDictionaryStringCFunctionPointer(options);
            }
            if (type == typeof(global::System.Collections.Immutable.ImmutableSortedDictionary<string, global::c2ffi.Data.Nodes.CMacroObject>))
            {
                return Create_ImmutableSortedDictionaryStringCMacroObject(options);
            }
            if (type == typeof(global::System.Collections.Immutable.ImmutableSortedDictionary<string, global::c2ffi.Data.Nodes.COpaqueType>))
            {
                return Create_ImmutableSortedDictionaryStringCOpaqueType(options);
            }
            if (type == typeof(global::System.Collections.Immutable.ImmutableSortedDictionary<string, global::c2ffi.Data.Nodes.CRecord>))
            {
                return Create_ImmutableSortedDictionaryStringCRecord(options);
            }
            if (type == typeof(global::System.Collections.Immutable.ImmutableSortedDictionary<string, global::c2ffi.Data.Nodes.CTypeAlias>))
            {
                return Create_ImmutableSortedDictionaryStringCTypeAlias(options);
            }
            if (type == typeof(global::System.Collections.Immutable.ImmutableSortedDictionary<string, global::c2ffi.Data.Nodes.CVariable>))
            {
                return Create_ImmutableSortedDictionaryStringCVariable(options);
            }
            if (type == typeof(int))
            {
                return Create_Int32(options);
            }
            if (type == typeof(int?))
            {
                return Create_NullableInt32(options);
            }
            if (type == typeof(long))
            {
                return Create_Int64(options);
            }
            if (type == typeof(string))
            {
                return Create_String(options);
            }
            return null;
        }
    }
}

// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace c2json.Data.Serialization
{
    public partial class JsonSerializerContextCFfiCrossPlatform
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::c2json.Data.TargetPlatform>? _TargetPlatform;
        
        /// <summary>
        /// Defines the source generated JSON serialization contract metadata for a given type.
        /// </summary>
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::c2json.Data.TargetPlatform> TargetPlatform
        {
            get => _TargetPlatform ??= (global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::c2json.Data.TargetPlatform>)Options.GetTypeInfo(typeof(global::c2json.Data.TargetPlatform));
        }
        
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::c2json.Data.TargetPlatform> Create_TargetPlatform(global::System.Text.Json.JsonSerializerOptions options)
        {
            if (!TryGetTypeInfoForRuntimeCustomConverter<global::c2json.Data.TargetPlatform>(options, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::c2json.Data.TargetPlatform> jsonTypeInfo))
            {
                global::System.Text.Json.Serialization.JsonConverter converter = ExpandConverter(typeof(global::c2json.Data.TargetPlatform), new global::c2json.Data.Serialization.TargetPlatformJsonConverter(), options);
                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateValueInfo<global::c2json.Data.TargetPlatform> (options, converter);
            }
        
            jsonTypeInfo.OriginatingResolver = this;
            return jsonTypeInfo;
        }
    }
}
